<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- Tags que infomam o caminho para identificar os beans criados pelo Spring através de anotações -->
	
	<context:component-scan base-package="br.com.viajaclub.bo"/>
	<context:component-scan base-package="br.com.viajaclub.controller"/>
	<context:component-scan base-package="br.com.viajaclub.dao"/>
	<context:component-scan base-package="br.com.viajaclub.dao.mysql"/>
	<context:component-scan base-package="br.com.viajaclub.entity.mysql"/>
	
	<!-- Esse bean representa a fábrica do gerenciador de entidades. A fabrica recebe como parâmetro uma unidade de persistência,
	Persistence Unit. Essa unidade de persistência contem uma série de informações que são utilizadas para configurar o 
	entity manager. A fabrica também recebe o bean responsável pelo datasource e a especificação de qual é a implementação 
	do Java Persistence API (JPA). 	 
	--> 
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" p:dataSource-ref="DSbdp" p:persistenceUnitName="bdp">
   		<property name="jpaVendorAdapter">
    		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
  		</property>
	</bean>
	
	<bean id="entityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
   		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<jee:jndi-lookup jndi-name="DSvclub" id="DSvclub" expected-type="javax.sql.DataSource"/>	
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
		
	<tx:annotation-driven />
	
	<!-- Configuração necessára para o controle de transação via JPA -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
  		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	 <!-- Habilita a descoberta automática de classes que possuem aspectos e para proxy automático nas classes que serão afetadas pelo corte do aspecto -->
 	<!-- Bean que configura a classe de aspecto para interceptar chamadas e incluir Log de operação. -->
   <!--  --> <bean id="logAspecto" class="br.com.viajaclub.util.LogInterceptador" />  -->
    
     <!-- Esse bean atua em conjunto com o bean MailSender e possibilita uma configuração de texto padrão -->
    <bean id="emailPadrao" class="org.springframework.mail.SimpleMailMessage">
		<property name="text">
			<value>
				<![CDATA[
					<html> 
					<body>
						<h2>Prezado(a), </h2>
						<p>%s</p> 
					</body>
					</html>
				]]>
			</value>
		</property>
	</bean>
    
</beans>